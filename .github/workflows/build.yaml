name: Build container
on:
  push:
  pull_request:
jobs:
  build-arm64:
    runs-on: ubuntu-latest
    name: "Build arm64 container"
    steps:
      - name: Checkout
        uses: actions/checkout@v2.1.0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: arm64.dockerfile
          platforms: linux/arm64
          push: false
  build-test-amd64:
    name: "Build and test amd64 container"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.1.0
      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: amd64.dockerfile
          push: false
          load: true
          tags: factorio:test
      - name: "Test"
        run: |
          docker run --rm factorio:test --version
  push:
    runs-on: ubuntu-22.04
    name: "Push image"
    needs: [build-arm64, build-test-amd64]
    if: ${{ github.ref == 'refs/heads/multiarch' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.1.0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Generate tags
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/ram042/factorio
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=ref,event=tag
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build arm64
        uses: docker/build-push-action@v3
        with:
          context: .
          file: arm64.dockerfile
          platforms: linux/arm64
          load: true
          tags: factorio:arm64
      - name: Build amd64
        uses: docker/build-push-action@v3
        with:
          context: .
          file: amd64.dockerfile
          load: true
          tags: factorio:amd64
      - name: Generate and push manifest
        shell: bash
        run: |
          set -x
          buildah manifest create factorio
          buildah pull docker-daemon:factorio:arm64
          buildah pull docker-daemon:factorio:amd64
          buildah manifest add factorio docker-daemon:factorio:arm64
          buildah manifest add factorio docker-daemon:factorio:amd64
          
          add_tags=$( echo "${{ steps.meta.outputs.tags }}" | cut -s -d "," -f2- )
          if [ -n "$add_tags" ]; then
            add_tags="--additional-tag=$add_tags"
            echo "$add_tags"
            skopeo copy -a containers-storage:localhost/factorio $( ${{ steps.meta.outputs.tags }} | cut -d "," -f1 ) $add_tags 
          else 
            skopeo copy -a containers-storage:localhost/factorio "docker://${{ steps.meta.outputs.tags }}"
          fi
          

